[{"C:\\Users\\samsad.c\\Documents\\react\\web\\firebase_curd\\src\\index.js":"1","C:\\Users\\samsad.c\\Documents\\react\\web\\firebase_curd\\src\\App.js":"2","C:\\Users\\samsad.c\\Documents\\react\\web\\firebase_curd\\src\\reportWebVitals.js":"3","C:\\Users\\samsad.c\\Documents\\react\\web\\firebase_curd\\src\\components\\Contacts.js":"4","C:\\Users\\samsad.c\\Documents\\react\\web\\firebase_curd\\src\\components\\ContactForm.js":"5","C:\\Users\\samsad.c\\Documents\\react\\web\\firebase_curd\\src\\firebase.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":270,"mtime":1609405260509,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":3548,"mtime":1609663578071,"results":"11","hashOfConfig":"8"},{"size":3339,"mtime":1609661472142,"results":"12","hashOfConfig":"8"},{"size":627,"mtime":1609655111768,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1gcrq41",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\samsad.c\\Documents\\react\\web\\firebase_curd\\src\\index.js",[],["30","31"],"C:\\Users\\samsad.c\\Documents\\react\\web\\firebase_curd\\src\\App.js",["32"],"import logo from './logo.svg';\nimport './App.css';\nimport Contacts from './components/Contacts';\n\nfunction App() {\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-8 offset-md-2\">\n        <Contacts />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\samsad.c\\Documents\\react\\web\\firebase_curd\\src\\reportWebVitals.js",[],"C:\\Users\\samsad.c\\Documents\\react\\web\\firebase_curd\\src\\components\\Contacts.js",["33","34","35"],"import React,{useState,useEffect} from \"react\";\r\nimport ContactForm from \"./ContactForm\";\r\nimport firebaseDb from \"../firebase\";\r\n\r\nconst Contacts = () => {\r\n\r\n\r\n    var [contactObjects,setContactObjects] = useState([])\r\n    var [currentId,setCurrentId] = useState('')\r\n\r\n    useEffect(()=>{\r\n        firebaseDb.child(\"contacts\").on('value',snapshot =>{\r\n            if(snapshot.val()!=null){\r\n                setContactObjects({\r\n                    ...snapshot.val()\r\n                })\r\n            }else{\r\n                setContactObjects({})\r\n            }\r\n        })\r\n    },[]) \r\n\r\n    const addOrEdit = obj=>{\r\n\r\n        if(currentId==''){\r\n            firebaseDb.child(\"contacts\").push(\r\n                obj,\r\n                err => {\r\n                    if(err)\r\n                    console.log(err)\r\n                }\r\n            )\r\n        }else{\r\n            firebaseDb.child(`contacts/${currentId}`).set(\r\n                obj,\r\n                err => {\r\n                    if(err)\r\n                    console.log(err)\r\n                    else\r\n                    setCurrentId('')\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    const onDelete = key=>{\r\n        if(window.confirm('Are you sure to delete the record?')){\r\n            firebaseDb.child(`contacts/${key}`).remove(\r\n\r\n            )\r\n        }\r\n    }\r\n    return ( \r\n        <>\r\n        <div className=\"jumbotron\">\r\n            <h1 className=\"display-4 text-center\">Contact Register</h1>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n                <ContactForm addOrEdit={addOrEdit} currentId={currentId} contactObjects={contactObjects}  />\r\n            </div>\r\n\r\n            <div className=\"col-md-8\">\r\n               <table className=\"table table-borderless table-stripped\">\r\n                    <thead className=\"thead light\" style={{\r\n                        backgroundColor: 'lightGrey'\r\n                    }}>\r\n                        <tr>\r\n                            <th>FullName</th>\r\n                            <th>Mobile</th>\r\n                            <th>Email</th>\r\n                            <th>Address</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            Object.keys(contactObjects).map(id=>{\r\n                                return <tr key={id}>\r\n                                    <td>{contactObjects[id].fullName}</td>\r\n                                    <td>{contactObjects[id].mobile}</td>\r\n                                    <td>{contactObjects[id].email}</td>\r\n                                    <td>{contactObjects[id].address}</td>\r\n                                    <td>\r\n                                        <a className=\"btn text-primary\" onClick={()=>{setCurrentId(id)}}>\r\n                                            <i className=\"fas fa-pencil-alt\"></i>\r\n                                        </a>\r\n\r\n                                        <a className=\"btn text-danger\" onClick={ () => {onDelete(id)} }>\r\n                                            <i className=\"fas fa-trash-alt\"></i>\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n               </table>\r\n            </div>\r\n        </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Contacts;","C:\\Users\\samsad.c\\Documents\\react\\web\\firebase_curd\\src\\components\\ContactForm.js",["36","37","38","39","40","41","42"],"import React,{useState,useEffect} from \"react\";\r\n\r\nconst ContactForm = (props) => {\r\n\r\n    const initialFieldValues = {\r\n        fullName:'',\r\n        mobile:'',\r\n        email:'',\r\n        address:''\r\n    }\r\n\r\n    const handleInputChange = e=>{\r\n        var {name,value} = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    var [values,setValues] = useState(initialFieldValues)\r\n\r\n\r\n    useEffect(()=>{\r\n        if(props.currentId==''){\r\n            setValues({\r\n                ...initialFieldValues\r\n            })\r\n        }else{\r\n            setValues({\r\n                ...props.contactObjects[props.currentId]\r\n            })\r\n        }\r\n    },[props.currentId,props.contactObjects])\r\n\r\n\r\n    const handleFormSubmit = e=>{\r\n        e.preventDefault();\r\n        if(values.fullName!=''&&values.mobile!=''&&values.email!=''&&values.address!=''){\r\n            props.addOrEdit(values);\r\n            setValues(initialFieldValues)\r\n        }else{\r\n            console.log(\"Please enter Valid Details\")\r\n        } \r\n    }\r\n\r\n    return ( \r\n        <form autoComplete=\"off\" onSubmit={handleFormSubmit}>\r\n            \r\n            <div className=\"form-group input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                    <div className=\"input-group-text\">\r\n                        <i className=\"fas fa-user\"></i>\r\n                    </div>\r\n                </div>\r\n                <input className=\"form-control\" placeholder=\"Full Name\" name=\"fullName\"\r\n                value={values.fullName} onChange={handleInputChange} required  />\r\n            </div>\r\n    \r\n            <div className=\"form-row\">\r\n                    <div className=\"form-group input-group col-md-6\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <div className=\"input-group-text\">\r\n                                <i className=\"fas fa-mobile-alt\"></i>\r\n                            </div>\r\n                        </div>\r\n                        <input className=\"form-control\" placeholder=\"Mobile\" name=\"mobile\"\r\n                        value={values.mobile} onChange={handleInputChange} required  />\r\n                    </div> \r\n                    <div className=\"form-group input-group col-md-6\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <div className=\"input-group-text\">\r\n                                <i className=\"fas fa-envelope\"></i>\r\n                            </div>\r\n                        </div>\r\n                        <input className=\"form-control\" placeholder=\"Email\" name=\"email\"\r\n                        value={values.email} onChange={handleInputChange} required  />\r\n                   \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group input-group col-md-6\">\r\n                <textarea className=\"form-control\" placeholder=\"Address\" name=\"address\"\r\n                    value={values.address}  onChange={handleInputChange} required  />\r\n            </div>\r\n\r\n            <div className=\"form-group input-group col-md-6\">\r\n                <input type=\"submit\" value={props.currentId==''?\"Save\":\"Update\"} className=\"btn btn-primary btn-block\" />\r\n            </div>\r\n\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default ContactForm;","C:\\Users\\samsad.c\\Documents\\react\\web\\firebase_curd\\src\\firebase.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":12},{"ruleId":"51","severity":1,"message":"52","line":25,"column":21,"nodeType":"53","messageId":"54","endLine":25,"endColumn":23},{"ruleId":"55","severity":1,"message":"56","line":86,"column":41,"nodeType":"57","endLine":86,"endColumn":106},{"ruleId":"55","severity":1,"message":"56","line":90,"column":41,"nodeType":"57","endLine":90,"endColumn":105},{"ruleId":"51","severity":1,"message":"52","line":24,"column":27,"nodeType":"53","messageId":"54","endLine":24,"endColumn":29},{"ruleId":"58","severity":1,"message":"59","line":33,"column":7,"nodeType":"60","endLine":33,"endColumn":45,"suggestions":"61"},{"ruleId":"51","severity":1,"message":"62","line":38,"column":27,"nodeType":"53","messageId":"54","endLine":38,"endColumn":29},{"ruleId":"51","severity":1,"message":"62","line":38,"column":46,"nodeType":"53","messageId":"54","endLine":38,"endColumn":48},{"ruleId":"51","severity":1,"message":"62","line":38,"column":64,"nodeType":"53","messageId":"54","endLine":38,"endColumn":66},{"ruleId":"51","severity":1,"message":"62","line":38,"column":84,"nodeType":"53","messageId":"54","endLine":38,"endColumn":86},{"ruleId":"51","severity":1,"message":"52","line":87,"column":60,"nodeType":"53","messageId":"54","endLine":87,"endColumn":62},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialFieldValues'. Either include it or remove the dependency array.","ArrayExpression",["65"],"Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [props.currentId, props.contactObjects, initialFieldValues]",{"range":"68","text":"69"},[707,745],"[props.currentId, props.contactObjects, initialFieldValues]"]